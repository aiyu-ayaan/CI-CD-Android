name : Build and Release ðŸš€

on :
  push :
    tags:
      - pre-v*

jobs :
  build :
    runs-on : ubuntu-latest
    steps:
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
            fileName: 'keystore/keystore.jks'
            encodedString: ${{ secrets.KEYSTORE }}

      - uses : actions/checkout@v2
      - name : set up JDK 11
        uses : actions/setup-java@v1
        with :
            java-version : 11
            distribution : 'temurin'
            cache : gradle

      - name : Make gradlew executable
        run : chmod +x ./gradlew

      - name : Build Release APK
        run : ./gradlew :app:assembleRelease --stacktrace :app:assembleRelease --stacktrace
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name : Upload
        uses : actions/upload-artifact@v2
        with :
            name : apk
            path : app/build/outputs/apk/release/app-release-unsigned.apk
      - name : Upload
        uses : actions/upload-artifact@v2
        with :
            name : abb
            path : app/build/outputs/bundle/release/app-release.aab

  release:
    name : Release APK
    needs : build
    runs-on : ubuntu-latest
    steps :
      - name: Download APK from build
        uses: actions/download-artifact@v3
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}
        with:
          tag_name: ${{ github.ref  }}
          release_name: ${{ github.event.repository.name }} ${{ github.ref }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release-unsigned.apk
          asset_name: CI_CD ${{ github.ref }}.apk
          asset_content_type: application/zip

  release_aab:
    name : Release AAB
    needs : build
    runs-on : ubuntu-latest
    steps :
      - name: Download AAB from build
        uses: actions/download-artifact@v3
        with:
          name: abb
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}
        with:
          tag_name: ${{ github.ref  }}
          release_name: ${{ github.event.repository.name }} ${{ github.ref }}

      - name: Upload Release AAB
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release.aab
          asset_name: CI_CD ${{ github.ref }}.aab
          asset_content_type: application/zip
  